[{"/home/joseph/code/react/todos/src/index.js":"1","/home/joseph/code/react/todos/src/components/InputBar/index.jsx":"2","/home/joseph/code/react/todos/src/components/TodoList/index.jsx":"3","/home/joseph/code/react/todos/src/pages/App/index.jsx":"4","/home/joseph/code/react/todos/src/pages/TodoPage/index.jsx":"5","/home/joseph/code/react/todos/src/components/ActionBar/index.jsx":"6"},{"size":225,"mtime":1606917832281,"results":"7","hashOfConfig":"8"},{"size":456,"mtime":1607178416441,"results":"9","hashOfConfig":"8"},{"size":1052,"mtime":1607439401835,"results":"10","hashOfConfig":"8"},{"size":2793,"mtime":1607514096854,"results":"11","hashOfConfig":"8"},{"size":1043,"mtime":1607441221922,"results":"12","hashOfConfig":"8"},{"size":911,"mtime":1607440582835,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1hstpxq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/joseph/code/react/todos/src/index.js",[],["29","30"],"/home/joseph/code/react/todos/src/components/InputBar/index.jsx",[],"/home/joseph/code/react/todos/src/components/TodoList/index.jsx",[],["31","32"],"/home/joseph/code/react/todos/src/pages/App/index.jsx",["33"],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport TodoPage from '../TodoPage';\n\nconst App = () => {\n\n  const [todos, setTodos] = useState(\n    [\n      {\n        description: 'Walk the dog.',\n        active: true,\n        completed: false\n      },\n      {\n        description: 'Swim in the ocean.',\n        active: true,\n        completed: false\n      },\n      {\n        description: 'Sail the seven seas.',\n        active: true,\n        completed: false\n      },\n      {\n        description: 'Tip cows.',\n        active: true,\n        completed: false\n      }\n    ]\n  );\n\n  const [todo, setTodo] = useState('');\n  const [count, setCount] = useState(0);\n\n  const [displayedTodos, setDisplayedTodos] = useState([...todos]);\n\n  useEffect(() => {\n    setCount(calcCompleted());\n    setDisplayedTodos(todos);\n  }, [todos])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const newTodo = {\n      description: e.target.value,\n      active: true,\n      completed: false\n    }\n\n    setTodos([...todos, newTodo]);\n\n    // Clear input box.\n    setTodo('');\n  }\n\n  const calcCompleted = () => {\n    const c = todos.filter((todo) => todo.completed !== true);\n    \n    return c.length;\n  }\n\n  const handleRemoveTodo = (desc) => {\n    // Filter the list for all todos without the given description.\n    const updatedTodos = todos.filter((todo) => todo.description !== desc);\n\n    setTodos(updatedTodos);\n  }\n\n  const handleToggleComplete = (desc) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.description === desc) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })\n\n    setTodos(updatedTodos);\n  }\n\n  const handleClearComplete = () => {\n    const incompleteTodos = todos.filter((todo) => todo.completed === false);\n\n    setTodos(incompleteTodos);\n  }\n\n  const handleCompletedFilter = () => {\n    const completedTodos = todos.filter((todo) => todo.completed === true);\n\n    setDisplayedTodos(completedTodos);\n  }\n\n  const handleActiveFilter = () => {\n    const activeTodos = todos.filter((todo) => todo.completed === false);\n\n    setDisplayedTodos(activeTodos);\n  }\n\n  const handleAllFilter = () => {\n    setDisplayedTodos(todos);\n  }\n\n  return (\n    <div className=\"App\">\n        <TodoPage\n          count={count}\n          todo={todo}\n          todos={todos}\n          displayedTodos={displayedTodos}\n          setTodo={setTodo}\n          handleSubmit={handleSubmit}\n          handleRemoveTodo={handleRemoveTodo}\n          handleToggleComplete={handleToggleComplete}\n          handleClearComplete={handleClearComplete}\n          handleCompletedFilter={handleCompletedFilter}\n          handleActiveFilter={handleActiveFilter}\n          handleAllFilter={handleAllFilter}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","/home/joseph/code/react/todos/src/pages/TodoPage/index.jsx",[],"/home/joseph/code/react/todos/src/components/ActionBar/index.jsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":40,"column":6,"nodeType":"42","endLine":40,"endColumn":13,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],["44"],["45"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calcCompleted'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [calcCompleted, todos]",{"range":"49","text":"50"},[831,838],"[calcCompleted, todos]"]