[{"/home/joseph/code/react/todos/src/index.js":"1","/home/joseph/code/react/todos/src/components/InputBar/index.jsx":"2","/home/joseph/code/react/todos/src/components/TodoList/index.jsx":"3","/home/joseph/code/react/todos/src/pages/App/index.jsx":"4","/home/joseph/code/react/todos/src/pages/TodoPage/index.jsx":"5"},{"size":225,"mtime":1606917832281,"results":"6","hashOfConfig":"7"},{"size":456,"mtime":1607178416441,"results":"8","hashOfConfig":"7"},{"size":1024,"mtime":1607261212738,"results":"9","hashOfConfig":"7"},{"size":1488,"mtime":1607176316894,"results":"10","hashOfConfig":"7"},{"size":662,"mtime":1607176365555,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hstpxq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/joseph/code/react/todos/src/index.js",[],["25","26"],"/home/joseph/code/react/todos/src/components/InputBar/index.jsx",[],["27","28"],"/home/joseph/code/react/todos/src/components/TodoList/index.jsx",[],"/home/joseph/code/react/todos/src/pages/App/index.jsx",["29"],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport TodoPage from '../TodoPage';\n\nconst App = () => {\n\n  const [todos, setTodos] = useState(\n    [\n      {\n        description: 'Walk the dog.',\n        active: true,\n        completed: false\n      },\n      {\n        description: 'Swim in the ocean',\n        active: true,\n        completed: false\n      }\n    ]\n  );\n\n  const [todo, setTodo] = useState('');\n\n\n  // useEffect(() => {\n\n  // }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const newTodo = {\n      description: e.target.value,\n      active: true,\n      completed: false\n    }\n\n    setTodos([...todos, newTodo]);\n\n    // Clear input box.\n    setTodo('');\n  }\n\n  const handleRemoveTodo = (desc) => {\n    // Filter the list for all todos without the given description.\n    const updatedTodos = todos.filter((todo) => todo.description !== desc);\n\n    setTodos(updatedTodos);\n  }\n\n  const handleToggleComplete = (desc) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.description === desc) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })\n\n    setTodos(updatedTodos);\n  }\n\n\n  return (\n    <div className=\"App\">\n        <TodoPage\n          todo={todo}\n          todos={todos}\n          setTodo={setTodo}\n          handleSubmit={handleSubmit}\n          handleRemoveTodo={handleRemoveTodo}\n          handleToggleComplete={handleToggleComplete}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","/home/joseph/code/react/todos/src/pages/TodoPage/index.jsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"34"},{"ruleId":"32","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":10,"nodeType":"38","messageId":"39","endLine":1,"endColumn":19},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]